name: Code Quality

on:
  push:
    branches:
      - main
      - master
      - refacto
      - develop
  pull_request:
    branches:
      - main
      - master
      - refacto
      - develop

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install mypy pylint flake8 black isort

      - name: Check code formatting with black
        run: |
          black --check cli/ core/ services/ utils/ models/ --line-length=120
        continue-on-error: true

      - name: Check import sorting with isort
        run: |
          isort --check-only cli/ core/ services/ utils/ models/ --profile black
        continue-on-error: true

      - name: Type checking with mypy (strict mode)
        run: |
          mypy cli/ core/ services/ utils/ models/ \
            --strict \
            --ignore-missing-imports \
            --show-error-codes \
            --html htmlcov/mypy_report || true

      - name: Lint with pylint
        run: |
          pylint cli/ core/ services/ utils/ models/ \
            --max-line-length=120 \
            --disable=R0801,C0111,W0212 \
            --exit-zero \
            --output-format=json > pylint_report.json || true

      - name: Lint with flake8
        run: |
          flake8 cli/ core/ services/ utils/ models/ \
            --max-line-length=120 \
            --ignore=E203,W503,E501 \
            --exit-zero \
            --format=json > flake8_report.json || true

      - name: Archive quality reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: code-quality-reports
          path: |
            htmlcov/mypy_report/
            pylint_report.json
            flake8_report.json
          retention-days: 30

      - name: Comment quality results on PR
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');

            let message = '## üîç Code Quality Check\n\n';

            // Check mypy
            message += '### Type Checking (mypy)\n';
            message += '‚úÖ Type checking completed in strict mode\n\n';

            // Check formatting
            message += '### Code Formatting\n';
            message += '‚úÖ Black and isort checks completed\n\n';

            // Check linting
            message += '### Linting\n';
            message += '‚úÖ pylint and flake8 checks completed\n\n';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
